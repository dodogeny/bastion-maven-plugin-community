package io.github.dodogeny.security.model;

import java.time.LocalDateTime;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * Results of a vulnerability scan with performance optimizations
 */
public class ScanResult {
    
    private LocalDateTime startTime;
    private LocalDateTime endTime;
    private String projectGroupId;
    private String projectArtifactId;
    private String projectVersion;
    private String projectName;
    private String projectDescription;
    private String scanType = "FULL";
    private String configurationJson;
    
    private List<DependencyResult> dependencies;
    private List<Vulnerability> vulnerabilities; // List of all vulnerabilities found
    
    // Trend data for historical comparison
    private Map<String, Object> trendData;
    
    // JAR analysis data for trend reporting
    private JarAnalysis jarAnalysis;
    
    // Summary statistics
    private int totalDependencies;
    private int vulnerableDependencies;
    private int totalVulnerabilities;
    private int criticalVulnerabilities;
    private int highVulnerabilities;
    private int mediumVulnerabilities;
    private int lowVulnerabilities;
    
    // Performance metrics
    private long scanDurationMs;
    private int dependenciesProcessedPerSecond;
    private boolean isMultiModule;
    private String rootGroupId;
    
    // Enhanced statistics and performance metrics
    private ScanStatistics statistics;
    private PerformanceMetrics performanceMetrics;
    
    // Constructors
    public ScanResult() {}
    
    public ScanResult(String projectGroupId, String projectArtifactId, String projectVersion) {
        this.projectGroupId = projectGroupId;
        this.projectArtifactId = projectArtifactId;
        this.projectVersion = projectVersion;
        this.startTime = LocalDateTime.now();
    }
    
    // Getters and setters
    public LocalDateTime getStartTime() { return startTime; }
    public void setStartTime(LocalDateTime startTime) { this.startTime = startTime; }
    
    public LocalDateTime getEndTime() { return endTime; }
    public void setEndTime(LocalDateTime endTime) { 
        this.endTime = endTime; 
        if (startTime != null && endTime != null) {
            this.scanDurationMs = java.time.Duration.between(startTime, endTime).toMillis();
            if (scanDurationMs > 0 && totalDependencies > 0) {
                this.dependenciesProcessedPerSecond = (int) ((totalDependencies * 1000L) / scanDurationMs);
            }
        }
    }
    
    public String getProjectGroupId() { return projectGroupId; }
    public void setProjectGroupId(String projectGroupId) { this.projectGroupId = projectGroupId; }
    
    public String getProjectArtifactId() { return projectArtifactId; }
    public void setProjectArtifactId(String projectArtifactId) { this.projectArtifactId = projectArtifactId; }
    
    public String getProjectVersion() { return projectVersion; }
    public void setProjectVersion(String projectVersion) { this.projectVersion = projectVersion; }
    
    public String getProjectName() { return projectName; }
    public void setProjectName(String projectName) { this.projectName = projectName; }
    
    public String getProjectDescription() { return projectDescription; }
    public void setProjectDescription(String projectDescription) { this.projectDescription = projectDescription; }
    
    public String getScanType() { return scanType; }
    public void setScanType(String scanType) { this.scanType = scanType; }
    
    public String getConfigurationJson() { return configurationJson; }
    public void setConfigurationJson(String configurationJson) { this.configurationJson = configurationJson; }
    
    public List<DependencyResult> getDependencies() { return dependencies; }
    public void setDependencies(List<DependencyResult> dependencies) { 
        this.dependencies = dependencies; 
        if (dependencies != null) {
            this.totalDependencies = dependencies.size();
            this.vulnerableDependencies = (int) dependencies.stream()
                .mapToLong(d -> d.getVulnerabilityIds().size() > 0 ? 1 : 0)
                .sum();
            this.totalVulnerabilities = dependencies.stream()
                .mapToInt(d -> d.getVulnerabilityIds().size())
                .sum();
        }
    }
    
    public List<Vulnerability> getVulnerabilities() { return vulnerabilities; }
    public void setVulnerabilities(List<Vulnerability> vulnerabilities) { this.vulnerabilities = vulnerabilities; }
    
    public Map<String, Object> getTrendData() { 
        return trendData; 
    }
    public void setTrendData(Map<String, Object> trendData) { this.trendData = trendData; }
    
    public void addTrendData(String key, Object value) {
        if (this.trendData == null) {
            this.trendData = new java.util.HashMap<>();
        }
        this.trendData.put(key, value);
    }
    
    @com.fasterxml.jackson.annotation.JsonIgnore
    public boolean hasFirstTimeData() {
        return trendData != null && !trendData.isEmpty();
    }
    
    public JarAnalysis getJarAnalysis() { return jarAnalysis; }
    public void setJarAnalysis(JarAnalysis jarAnalysis) { this.jarAnalysis = jarAnalysis; }
    
    @com.fasterxml.jackson.annotation.JsonIgnore
    public List<VulnerableJar> getVulnerableJars() {
        if (dependencies == null || vulnerabilities == null) {
            return java.util.Collections.emptyList();
        }
        
        // Create vulnerable JAR objects from dependencies and vulnerabilities
        java.util.List<VulnerableJar> vulnerableJars = new java.util.ArrayList<>();
        
        for (DependencyResult dep : dependencies) {
            if (dep.isVulnerable()) {
                VulnerableJar jar = new VulnerableJar();
                jar.name = dep.getGroupId() + ":" + dep.getArtifactId();
                jar.version = dep.getVersion();
                jar.vulnerabilities = new java.util.ArrayList<>();
                
                // Find vulnerabilities for this dependency
                for (Vulnerability vuln : vulnerabilities) {
                    // Match using CVE ID since that's what's stored in vulnerability IDs
                    String vulnKey = vuln.getCveId() != null ? vuln.getCveId() : vuln.getId();
                    if (vulnKey != null && dep.getVulnerabilityIds().contains(vulnKey)) {
                        VulnerabilityInfo vulnInfo = new VulnerabilityInfo();
                        vulnInfo.cveId = vulnKey;
                        vulnInfo.severity = vuln.getSeverity() != null ? vuln.getSeverity() : "UNKNOWN";
                        jar.vulnerabilities.add(vulnInfo);
                    }
                }
                
                // Count by severity
                jar.criticalCount = (int) jar.vulnerabilities.stream().filter(v -> "CRITICAL".equals(v.severity)).count();
                jar.highCount = (int) jar.vulnerabilities.stream().filter(v -> "HIGH".equals(v.severity)).count();
                jar.mediumCount = (int) jar.vulnerabilities.stream().filter(v -> "MEDIUM".equals(v.severity)).count();
                jar.lowCount = (int) jar.vulnerabilities.stream().filter(v -> "LOW".equals(v.severity)).count();
                
                jar.description = "Component: " + dep.getGroupId() + ":" + dep.getArtifactId() + ":" + dep.getVersion();
                
                vulnerableJars.add(jar);
            }
        }
        
        return vulnerableJars;
    }
    
    public int getTotalDependencies() { return totalDependencies; }
    public void setTotalDependencies(int totalDependencies) { this.totalDependencies = totalDependencies; }
    
    public int getVulnerableDependencies() { return vulnerableDependencies; }
    public void setVulnerableDependencies(int vulnerableDependencies) { this.vulnerableDependencies = vulnerableDependencies; }
    
    public int getTotalVulnerabilities() { return totalVulnerabilities; }
    public void setTotalVulnerabilities(int totalVulnerabilities) { this.totalVulnerabilities = totalVulnerabilities; }
    
    public int getCriticalVulnerabilities() { return criticalVulnerabilities; }
    public void setCriticalVulnerabilities(int criticalVulnerabilities) { this.criticalVulnerabilities = criticalVulnerabilities; }
    
    public int getHighVulnerabilities() { return highVulnerabilities; }
    public void setHighVulnerabilities(int highVulnerabilities) { this.highVulnerabilities = highVulnerabilities; }
    
    public int getMediumVulnerabilities() { return mediumVulnerabilities; }
    public void setMediumVulnerabilities(int mediumVulnerabilities) { this.mediumVulnerabilities = mediumVulnerabilities; }
    
    public int getLowVulnerabilities() { return lowVulnerabilities; }
    public void setLowVulnerabilities(int lowVulnerabilities) { this.lowVulnerabilities = lowVulnerabilities; }
    
    public long getScanDurationMs() { return scanDurationMs; }
    public void setScanDurationMs(long scanDurationMs) { this.scanDurationMs = scanDurationMs; }
    
    public int getDependenciesProcessedPerSecond() { return dependenciesProcessedPerSecond; }
    public void setDependenciesProcessedPerSecond(int dependenciesProcessedPerSecond) { this.dependenciesProcessedPerSecond = dependenciesProcessedPerSecond; }
    
    public boolean isMultiModule() { return isMultiModule; }
    public void setMultiModule(boolean multiModule) { isMultiModule = multiModule; }
    
    public String getRootGroupId() { return rootGroupId; }
    public void setRootGroupId(String rootGroupId) { this.rootGroupId = rootGroupId; }
    
    public ScanStatistics getStatistics() { return statistics; }
    public void setStatistics(ScanStatistics statistics) { this.statistics = statistics; }
    
    public PerformanceMetrics getPerformanceMetrics() { return performanceMetrics; }
    public void setPerformanceMetrics(PerformanceMetrics performanceMetrics) { this.performanceMetrics = performanceMetrics; }

    /**
     * Result for a single dependency with performance optimizations
     */
    public static class DependencyResult {
        private String groupId;
        private String artifactId;
        private String version;
        private String scope;
        private boolean direct;
        private String filePath;
        private Long fileSize;
        private String sha1Hash;
        private String sha256Hash;
        private Set<String> vulnerabilityIds;
        
        // Performance tracking
        private long scanTimeMs;
        private String scannerUsed;
        
        public String getGroupId() { return groupId; }
        public void setGroupId(String groupId) { this.groupId = groupId; }
        
        public String getArtifactId() { return artifactId; }
        public void setArtifactId(String artifactId) { this.artifactId = artifactId; }
        
        public String getVersion() { return version; }
        public void setVersion(String version) { this.version = version; }
        
        public String getScope() { return scope; }
        public void setScope(String scope) { this.scope = scope; }
        
        public boolean isDirect() { return direct; }
        public void setDirect(boolean direct) { this.direct = direct; }
        
        public String getFilePath() { return filePath; }
        public void setFilePath(String filePath) { this.filePath = filePath; }
        
        public Long getFileSize() { return fileSize; }
        public void setFileSize(Long fileSize) { this.fileSize = fileSize; }
        
        public String getSha1Hash() { return sha1Hash; }
        public void setSha1Hash(String sha1Hash) { this.sha1Hash = sha1Hash; }
        
        public String getSha256Hash() { return sha256Hash; }
        public void setSha256Hash(String sha256Hash) { this.sha256Hash = sha256Hash; }
        
        public Set<String> getVulnerabilityIds() { return vulnerabilityIds != null ? vulnerabilityIds : Collections.emptySet(); }
        public void setVulnerabilityIds(Set<String> vulnerabilityIds) { this.vulnerabilityIds = vulnerabilityIds; }
        
        public long getScanTimeMs() { return scanTimeMs; }
        public void setScanTimeMs(long scanTimeMs) { this.scanTimeMs = scanTimeMs; }
        
        public String getScannerUsed() { return scannerUsed; }
        public void setScannerUsed(String scannerUsed) { this.scannerUsed = scannerUsed; }
        
        @com.fasterxml.jackson.annotation.JsonIgnore
        public String getCoordinates() {
            return groupId + ":" + artifactId + ":" + version;
        }
        
        @com.fasterxml.jackson.annotation.JsonIgnore
        public boolean isVulnerable() {
            return vulnerabilityIds != null && !vulnerabilityIds.isEmpty();
        }
    }
    
    /**
     * Scan summary for historical tracking with multi-module support
     */
    public static class ScanSummary {
        private Long scanId;
        private String projectGroupId;
        private String projectArtifactId;
        private String projectVersion;
        private String projectName;
        private String scanType;
        private LocalDateTime startTime;
        private LocalDateTime endTime;
        private String status;
        private int totalDependencies;
        private int vulnerableDependencies;
        private int totalVulnerabilities;
        private int criticalCount;
        private int highCount;
        private int mediumCount;
        private int lowCount;
        
        // Multi-module specific
        private boolean isMultiModule;
        private int moduleCount;
        private String rootGroupId;
        
        // Performance metrics
        private long scanDurationMs;
        private int dependenciesPerSecond;
        
        // Getters and setters
        public Long getScanId() { return scanId; }
        public void setScanId(Long scanId) { this.scanId = scanId; }
        
        public String getProjectGroupId() { return projectGroupId; }
        public void setProjectGroupId(String projectGroupId) { this.projectGroupId = projectGroupId; }
        
        public String getProjectArtifactId() { return projectArtifactId; }
        public void setProjectArtifactId(String projectArtifactId) { this.projectArtifactId = projectArtifactId; }
        
        public String getProjectVersion() { return projectVersion; }
        public void setProjectVersion(String projectVersion) { this.projectVersion = projectVersion; }
        
        public String getProjectName() { return projectName; }
        public void setProjectName(String projectName) { this.projectName = projectName; }
        
        public String getScanType() { return scanType; }
        public void setScanType(String scanType) { this.scanType = scanType; }
        
        public LocalDateTime getStartTime() { return startTime; }
        public void setStartTime(LocalDateTime startTime) { this.startTime = startTime; }
        
        public LocalDateTime getEndTime() { return endTime; }
        public void setEndTime(LocalDateTime endTime) { 
            this.endTime = endTime; 
            if (startTime != null && endTime != null) {
                this.scanDurationMs = java.time.Duration.between(startTime, endTime).toMillis();
                if (scanDurationMs > 0 && totalDependencies > 0) {
                    this.dependenciesPerSecond = (int) ((totalDependencies * 1000L) / scanDurationMs);
                }
            }
        }
        
        public String getStatus() { return status; }
        public void setStatus(String status) { this.status = status; }
        
        public int getTotalDependencies() { return totalDependencies; }
        public void setTotalDependencies(int totalDependencies) { this.totalDependencies = totalDependencies; }
        
        public int getVulnerableDependencies() { return vulnerableDependencies; }
        public void setVulnerableDependencies(int vulnerableDependencies) { this.vulnerableDependencies = vulnerableDependencies; }
        
        public int getTotalVulnerabilities() { return totalVulnerabilities; }
        public void setTotalVulnerabilities(int totalVulnerabilities) { this.totalVulnerabilities = totalVulnerabilities; }
        
        public int getCriticalCount() { return criticalCount; }
        public void setCriticalCount(int criticalCount) { this.criticalCount = criticalCount; }
        
        public int getHighCount() { return highCount; }
        public void setHighCount(int highCount) { this.highCount = highCount; }
        
        public int getMediumCount() { return mediumCount; }
        public void setMediumCount(int mediumCount) { this.mediumCount = mediumCount; }
        
        public int getLowCount() { return lowCount; }
        public void setLowCount(int lowCount) { this.lowCount = lowCount; }
        
        public boolean isMultiModule() { return isMultiModule; }
        public void setMultiModule(boolean multiModule) { isMultiModule = multiModule; }
        
        public int getModuleCount() { return moduleCount; }
        public void setModuleCount(int moduleCount) { this.moduleCount = moduleCount; }
        
        public String getRootGroupId() { return rootGroupId; }
        public void setRootGroupId(String rootGroupId) { this.rootGroupId = rootGroupId; }
        
        public long getScanDurationMs() { return scanDurationMs; }
        public void setScanDurationMs(long scanDurationMs) { this.scanDurationMs = scanDurationMs; }
        
        public int getDependenciesPerSecond() { return dependenciesPerSecond; }
        public void setDependenciesPerSecond(int dependenciesPerSecond) { this.dependenciesPerSecond = dependenciesPerSecond; }
    }
    
    /**
     * Detailed scan statistics with JAR analysis
     */
    public static class ScanStatistics {
        // JAR/Dependency Analysis
        private int totalJarsScanned;
        private int totalJarsSizeBytes;
        private int directDependencies;
        private int transitiveDependencies;
        private int uniqueGroupIds;
        private int duplicateJars;
        
        // CVE/Vulnerability Analysis
        private int totalCvesFound;
        private int uniqueCvesFound;
        private int duplicateCvesFound;
        private int cvesWithExploits;
        private int cvesActivelyExploited;
        
        // Severity Distribution
        private int criticalCves;
        private int highCves;
        private int mediumCves;
        private int lowCves;
        private int unknownSeverityCves;
        
        // CVSS Score Analysis
        private double averageCvssScore;
        private double highestCvssScore;
        private double lowestCvssScore;
        
        // Component Analysis
        private int vulnerableDirectDeps;
        private int vulnerableTransitiveDeps;
        private String mostVulnerableComponent;
        private int mostVulnerableComponentCveCount;
        
        // Scanner Performance
        private String scannerVersion;
        private String databaseVersion;
        private LocalDateTime lastDbUpdate;
        
        // Getters and setters
        public int getTotalJarsScanned() { return totalJarsScanned; }
        public void setTotalJarsScanned(int totalJarsScanned) { this.totalJarsScanned = totalJarsScanned; }
        
        public int getTotalJarsSizeBytes() { return totalJarsSizeBytes; }
        public void setTotalJarsSizeBytes(int totalJarsSizeBytes) { this.totalJarsSizeBytes = totalJarsSizeBytes; }
        
        public int getDirectDependencies() { return directDependencies; }
        public void setDirectDependencies(int directDependencies) { this.directDependencies = directDependencies; }
        
        public int getTransitiveDependencies() { return transitiveDependencies; }
        public void setTransitiveDependencies(int transitiveDependencies) { this.transitiveDependencies = transitiveDependencies; }
        
        public int getUniqueGroupIds() { return uniqueGroupIds; }
        public void setUniqueGroupIds(int uniqueGroupIds) { this.uniqueGroupIds = uniqueGroupIds; }
        
        public int getDuplicateJars() { return duplicateJars; }
        public void setDuplicateJars(int duplicateJars) { this.duplicateJars = duplicateJars; }
        
        public int getTotalCvesFound() { return totalCvesFound; }
        public void setTotalCvesFound(int totalCvesFound) { this.totalCvesFound = totalCvesFound; }
        
        public int getUniqueCvesFound() { return uniqueCvesFound; }
        public void setUniqueCvesFound(int uniqueCvesFound) { this.uniqueCvesFound = uniqueCvesFound; }
        
        public int getDuplicateCvesFound() { return duplicateCvesFound; }
        public void setDuplicateCvesFound(int duplicateCvesFound) { this.duplicateCvesFound = duplicateCvesFound; }
        
        public int getCvesWithExploits() { return cvesWithExploits; }
        public void setCvesWithExploits(int cvesWithExploits) { this.cvesWithExploits = cvesWithExploits; }
        
        public int getCvesActivelyExploited() { return cvesActivelyExploited; }
        public void setCvesActivelyExploited(int cvesActivelyExploited) { this.cvesActivelyExploited = cvesActivelyExploited; }
        
        public int getCriticalCves() { return criticalCves; }
        public void setCriticalCves(int criticalCves) { this.criticalCves = criticalCves; }
        
        public int getHighCves() { return highCves; }
        public void setHighCves(int highCves) { this.highCves = highCves; }
        
        public int getMediumCves() { return mediumCves; }
        public void setMediumCves(int mediumCves) { this.mediumCves = mediumCves; }
        
        public int getLowCves() { return lowCves; }
        public void setLowCves(int lowCves) { this.lowCves = lowCves; }
        
        public int getUnknownSeverityCves() { return unknownSeverityCves; }
        public void setUnknownSeverityCves(int unknownSeverityCves) { this.unknownSeverityCves = unknownSeverityCves; }
        
        public double getAverageCvssScore() { return averageCvssScore; }
        public void setAverageCvssScore(double averageCvssScore) { this.averageCvssScore = averageCvssScore; }
        
        public double getHighestCvssScore() { return highestCvssScore; }
        public void setHighestCvssScore(double highestCvssScore) { this.highestCvssScore = highestCvssScore; }
        
        public double getLowestCvssScore() { return lowestCvssScore; }
        public void setLowestCvssScore(double lowestCvssScore) { this.lowestCvssScore = lowestCvssScore; }
        
        public int getVulnerableDirectDeps() { return vulnerableDirectDeps; }
        public void setVulnerableDirectDeps(int vulnerableDirectDeps) { this.vulnerableDirectDeps = vulnerableDirectDeps; }
        
        public int getVulnerableTransitiveDeps() { return vulnerableTransitiveDeps; }
        public void setVulnerableTransitiveDeps(int vulnerableTransitiveDeps) { this.vulnerableTransitiveDeps = vulnerableTransitiveDeps; }
        
        public String getMostVulnerableComponent() { return mostVulnerableComponent; }
        public void setMostVulnerableComponent(String mostVulnerableComponent) { this.mostVulnerableComponent = mostVulnerableComponent; }
        
        public int getMostVulnerableComponentCveCount() { return mostVulnerableComponentCveCount; }
        public void setMostVulnerableComponentCveCount(int mostVulnerableComponentCveCount) { this.mostVulnerableComponentCveCount = mostVulnerableComponentCveCount; }
        
        public String getScannerVersion() { return scannerVersion; }
        public void setScannerVersion(String scannerVersion) { this.scannerVersion = scannerVersion; }
        
        public String getDatabaseVersion() { return databaseVersion; }
        public void setDatabaseVersion(String databaseVersion) { this.databaseVersion = databaseVersion; }
        
        public LocalDateTime getLastDbUpdate() { return lastDbUpdate; }
        public void setLastDbUpdate(LocalDateTime lastDbUpdate) { this.lastDbUpdate = lastDbUpdate; }
        
        @com.fasterxml.jackson.annotation.JsonIgnore
        public String getTotalJarsSizeFormatted() {
            double sizeKB = totalJarsSizeBytes / 1024.0;
            if (sizeKB < 1024) {
                return String.format("%.1f KB", sizeKB);
            } else {
                return String.format("%.1f MB", sizeKB / 1024.0);
            }
        }
    }
    
    /**
     * Performance metrics for scan optimization
     */
    public static class PerformanceMetrics {
        // Timing Breakdown
        private long initializationTimeMs;
        private long dependencyResolutionTimeMs;
        private long vulnerabilityCheckTimeMs;
        private long reportGenerationTimeMs;
        private long databaseWriteTimeMs;
        private long totalScanTimeMs;
        
        // Throughput Metrics
        private int jarsPerSecond;
        private int cveChecksPerSecond;
        private int mbPerSecond;
        
        // Resource Usage
        private long peakMemoryUsageMB;
        private long avgMemoryUsageMB;
        private int maxThreadsUsed;
        private int avgCpuUsagePercent;
        
        // Network/I/O Metrics
        private int networkRequestsMade;
        private long networkBytesTransferred;
        private int databaseQueriesExecuted;
        private long diskBytesRead;
        private long diskBytesWritten;
        
        // Cache Performance
        private int cacheHits;
        private int cacheMisses;
        private double cacheHitRatio;
        
        // Bottleneck Analysis
        private String slowestPhase;
        private long slowestPhaseTimeMs;
        private String recommendedOptimization;
        
        // Getters and setters
        public long getInitializationTimeMs() { return initializationTimeMs; }
        public void setInitializationTimeMs(long initializationTimeMs) { this.initializationTimeMs = initializationTimeMs; }
        
        public long getDependencyResolutionTimeMs() { return dependencyResolutionTimeMs; }
        public void setDependencyResolutionTimeMs(long dependencyResolutionTimeMs) { this.dependencyResolutionTimeMs = dependencyResolutionTimeMs; }
        
        public long getVulnerabilityCheckTimeMs() { return vulnerabilityCheckTimeMs; }
        public void setVulnerabilityCheckTimeMs(long vulnerabilityCheckTimeMs) { this.vulnerabilityCheckTimeMs = vulnerabilityCheckTimeMs; }
        
        public long getReportGenerationTimeMs() { return reportGenerationTimeMs; }
        public void setReportGenerationTimeMs(long reportGenerationTimeMs) { this.reportGenerationTimeMs = reportGenerationTimeMs; }
        
        public long getDatabaseWriteTimeMs() { return databaseWriteTimeMs; }
        public void setDatabaseWriteTimeMs(long databaseWriteTimeMs) { this.databaseWriteTimeMs = databaseWriteTimeMs; }
        
        public long getTotalScanTimeMs() { return totalScanTimeMs; }
        public void setTotalScanTimeMs(long totalScanTimeMs) { this.totalScanTimeMs = totalScanTimeMs; }
        
        public int getJarsPerSecond() { return jarsPerSecond; }
        public void setJarsPerSecond(int jarsPerSecond) { this.jarsPerSecond = jarsPerSecond; }
        
        public int getCveChecksPerSecond() { return cveChecksPerSecond; }
        public void setCveChecksPerSecond(int cveChecksPerSecond) { this.cveChecksPerSecond = cveChecksPerSecond; }
        
        public int getMbPerSecond() { return mbPerSecond; }
        public void setMbPerSecond(int mbPerSecond) { this.mbPerSecond = mbPerSecond; }
        
        public long getPeakMemoryUsageMB() { return peakMemoryUsageMB; }
        public void setPeakMemoryUsageMB(long peakMemoryUsageMB) { this.peakMemoryUsageMB = peakMemoryUsageMB; }
        
        public long getAvgMemoryUsageMB() { return avgMemoryUsageMB; }
        public void setAvgMemoryUsageMB(long avgMemoryUsageMB) { this.avgMemoryUsageMB = avgMemoryUsageMB; }
        
        public int getMaxThreadsUsed() { return maxThreadsUsed; }
        public void setMaxThreadsUsed(int maxThreadsUsed) { this.maxThreadsUsed = maxThreadsUsed; }
        
        public int getAvgCpuUsagePercent() { return avgCpuUsagePercent; }
        public void setAvgCpuUsagePercent(int avgCpuUsagePercent) { this.avgCpuUsagePercent = avgCpuUsagePercent; }
        
        public int getNetworkRequestsMade() { return networkRequestsMade; }
        public void setNetworkRequestsMade(int networkRequestsMade) { this.networkRequestsMade = networkRequestsMade; }
        
        public long getNetworkBytesTransferred() { return networkBytesTransferred; }
        public void setNetworkBytesTransferred(long networkBytesTransferred) { this.networkBytesTransferred = networkBytesTransferred; }
        
        public int getDatabaseQueriesExecuted() { return databaseQueriesExecuted; }
        public void setDatabaseQueriesExecuted(int databaseQueriesExecuted) { this.databaseQueriesExecuted = databaseQueriesExecuted; }
        
        public long getDiskBytesRead() { return diskBytesRead; }
        public void setDiskBytesRead(long diskBytesRead) { this.diskBytesRead = diskBytesRead; }
        
        public long getDiskBytesWritten() { return diskBytesWritten; }
        public void setDiskBytesWritten(long diskBytesWritten) { this.diskBytesWritten = diskBytesWritten; }
        
        public int getCacheHits() { return cacheHits; }
        public void setCacheHits(int cacheHits) { this.cacheHits = cacheHits; }
        
        public int getCacheMisses() { return cacheMisses; }
        public void setCacheMisses(int cacheMisses) { this.cacheMisses = cacheMisses; }
        
        public double getCacheHitRatio() { return cacheHitRatio; }
        public void setCacheHitRatio(double cacheHitRatio) { this.cacheHitRatio = cacheHitRatio; }
        
        public String getSlowestPhase() { return slowestPhase; }
        public void setSlowestPhase(String slowestPhase) { this.slowestPhase = slowestPhase; }
        
        public long getSlowestPhaseTimeMs() { return slowestPhaseTimeMs; }
        public void setSlowestPhaseTimeMs(long slowestPhaseTimeMs) { this.slowestPhaseTimeMs = slowestPhaseTimeMs; }
        
        public String getRecommendedOptimization() { return recommendedOptimization; }
        public void setRecommendedOptimization(String recommendedOptimization) { this.recommendedOptimization = recommendedOptimization; }
        
        @com.fasterxml.jackson.annotation.JsonIgnore
        public String getTotalScanTimeFormatted() {
            if (totalScanTimeMs < 1000) {
                return totalScanTimeMs + "ms";
            } else if (totalScanTimeMs < 60000) {
                return String.format("%.1fs", totalScanTimeMs / 1000.0);
            } else {
                return String.format("%dm %02ds", totalScanTimeMs / 60000, (totalScanTimeMs % 60000) / 1000);
            }
        }
        
        @com.fasterxml.jackson.annotation.JsonIgnore
        public String getNetworkBytesFormatted() {
            double sizeKB = networkBytesTransferred / 1024.0;
            if (sizeKB < 1024) {
                return String.format("%.1f KB", sizeKB);
            } else {
                return String.format("%.1f MB", sizeKB / 1024.0);
            }
        }
    }
    
    /**
     * JAR analysis data for trend reporting
     */
    public static class JarAnalysis {
        private List<VulnerableJar> resolvedJars;
        private List<VulnerableJar> newVulnerableJars;
        private List<VulnerableJar> pendingVulnerableJars;
        private int totalJarsAnalyzed;
        
        public JarAnalysis() {
            this.resolvedJars = new java.util.ArrayList<>();
            this.newVulnerableJars = new java.util.ArrayList<>();
            this.pendingVulnerableJars = new java.util.ArrayList<>();
        }
        
        public List<VulnerableJar> getResolvedJars() { return resolvedJars; }
        public void setResolvedJars(List<VulnerableJar> resolvedJars) { this.resolvedJars = resolvedJars; }
        
        public List<VulnerableJar> getNewVulnerableJars() { return newVulnerableJars; }
        public void setNewVulnerableJars(List<VulnerableJar> newVulnerableJars) { this.newVulnerableJars = newVulnerableJars; }
        
        public List<VulnerableJar> getPendingVulnerableJars() { return pendingVulnerableJars; }
        public void setPendingVulnerableJars(List<VulnerableJar> pendingVulnerableJars) { this.pendingVulnerableJars = pendingVulnerableJars; }
        
        public int getTotalJarsAnalyzed() { return totalJarsAnalyzed; }
        public void setTotalJarsAnalyzed(int totalJarsAnalyzed) { this.totalJarsAnalyzed = totalJarsAnalyzed; }
    }
    
    /**
     * Represents a vulnerable JAR with CVE information
     */
    public static class VulnerableJar {
        public String name;
        public String version;
        public List<VulnerabilityInfo> vulnerabilities;
        public int criticalCount;
        public int highCount;
        public int mediumCount;
        public int lowCount;
        public String description;
        public int resolvedCveCount;
        public List<ResolvedCve> resolvedCves;
        
        public VulnerableJar() {
            this.vulnerabilities = new java.util.ArrayList<>();
            this.resolvedCves = new java.util.ArrayList<>();
        }
        
        // Getters and setters
        public String getName() { return name; }
        public void setName(String name) { this.name = name; }
        
        public String getVersion() { return version; }
        public void setVersion(String version) { this.version = version; }
        
        public List<VulnerabilityInfo> getVulnerabilities() { return vulnerabilities; }
        public void setVulnerabilities(List<VulnerabilityInfo> vulnerabilities) { this.vulnerabilities = vulnerabilities; }
        
        public int getCriticalCount() { return criticalCount; }
        public void setCriticalCount(int criticalCount) { this.criticalCount = criticalCount; }
        
        public int getHighCount() { return highCount; }
        public void setHighCount(int highCount) { this.highCount = highCount; }
        
        public int getMediumCount() { return mediumCount; }
        public void setMediumCount(int mediumCount) { this.mediumCount = mediumCount; }
        
        public int getLowCount() { return lowCount; }
        public void setLowCount(int lowCount) { this.lowCount = lowCount; }
        
        public String getDescription() { return description; }
        public void setDescription(String description) { this.description = description; }
        
        public int getResolvedCveCount() { return resolvedCveCount; }
        public void setResolvedCveCount(int resolvedCveCount) { this.resolvedCveCount = resolvedCveCount; }
        
        public List<ResolvedCve> getResolvedCves() { return resolvedCves; }
        public void setResolvedCves(List<ResolvedCve> resolvedCves) { this.resolvedCves = resolvedCves; }
    }
    
    /**
     * Vulnerability information for JAR analysis
     */
    public static class VulnerabilityInfo {
        public String cveId;
        public String severity;
        
        public String getCveId() { return cveId; }
        public void setCveId(String cveId) { this.cveId = cveId; }
        
        public String getSeverity() { return severity; }
        public void setSeverity(String severity) { this.severity = severity; }
    }
    
    /**
     * Resolved CVE information
     */
    public static class ResolvedCve {
        public String id;
        public String severity;
        
        public String getId() { return id; }
        public void setId(String id) { this.id = id; }
        
        public String getSeverity() { return severity; }
        public void setSeverity(String severity) { this.severity = severity; }
    }
}