package mu.dodogeny.security.model;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Set;
import java.util.Objects;

/**
 * Vulnerability model with enhanced metadata for DodoSec Scanner
 */
public class Vulnerability {
    
    private String id;
    private String cveId;
    private String summary;
    private String description;
    private String severity;
    private Double cvssV2Score;
    private Double cvssV3Score;
    private String cvssV3Vector;
    private LocalDateTime publishedDate;
    private LocalDateTime modifiedDate;
    private String source;
    private List<String> references;
    private Set<String> cweIds;
    private Set<String> affectedCpes;
    private Double exploitabilityScore;
    private Double impactScore;
    private Boolean hasExploit = false;
    private Boolean isDisputed = false;
    private String vendorAdvisory;
    private String patchAvailable;
    
    // DodoSec specific fields
    private String dodoSecRiskScore;
    private LocalDateTime lastVerified;
    private String detectionMethod;
    private Set<String> affectedVersionRanges;
    private String affectedComponent;
    private LocalDateTime discoveredDate;
    private String referenceUrl;
    
    // Constructors
    public Vulnerability() {}
    
    public Vulnerability(String id) {
        this.id = id;
        this.lastVerified = LocalDateTime.now();
    }
    
    public Vulnerability(String cveId, String severity, String description) {
        this.cveId = cveId;
        this.severity = severity;
        this.description = description;
        this.id = cveId;
        this.lastVerified = LocalDateTime.now();
    }
    
    // Getters and setters
    public String getId() { return id; }
    public void setId(String id) { this.id = id; }
    
    public String getCveId() { return cveId; }
    public void setCveId(String cveId) { this.cveId = cveId; }
    
    public String getSummary() { return summary; }
    public void setSummary(String summary) { this.summary = summary; }
    
    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }
    
    public String getSeverity() { return severity; }
    public void setSeverity(String severity) { this.severity = severity; }
    
    public Double getCvssV2Score() { return cvssV2Score; }
    public void setCvssV2Score(Double cvssV2Score) { this.cvssV2Score = cvssV2Score; }
    
    public Double getCvssV3Score() { return cvssV3Score; }
    public void setCvssV3Score(Double cvssV3Score) { this.cvssV3Score = cvssV3Score; }
    
    public String getCvssV3Vector() { return cvssV3Vector; }
    public void setCvssV3Vector(String cvssV3Vector) { this.cvssV3Vector = cvssV3Vector; }
    
    public LocalDateTime getPublishedDate() { return publishedDate; }
    public void setPublishedDate(LocalDateTime publishedDate) { this.publishedDate = publishedDate; }
    
    public LocalDateTime getModifiedDate() { return modifiedDate; }
    public void setModifiedDate(LocalDateTime modifiedDate) { this.modifiedDate = modifiedDate; }
    
    public String getSource() { return source; }
    public void setSource(String source) { this.source = source; }
    
    public List<String> getReferences() { return references; }
    public void setReferences(List<String> references) { this.references = references; }
    
    public Set<String> getCweIds() { return cweIds; }
    public void setCweIds(Set<String> cweIds) { this.cweIds = cweIds; }
    
    public Set<String> getAffectedCpes() { return affectedCpes; }
    public void setAffectedCpes(Set<String> affectedCpes) { this.affectedCpes = affectedCpes; }
    
    public Double getExploitabilityScore() { return exploitabilityScore; }
    public void setExploitabilityScore(Double exploitabilityScore) { this.exploitabilityScore = exploitabilityScore; }
    
    public Double getImpactScore() { return impactScore; }
    public void setImpactScore(Double impactScore) { this.impactScore = impactScore; }
    
    public Boolean getHasExploit() { return hasExploit; }
    public void setHasExploit(Boolean hasExploit) { this.hasExploit = hasExploit; }
    
    public Boolean getIsDisputed() { return isDisputed; }
    public void setIsDisputed(Boolean isDisputed) { this.isDisputed = isDisputed; }
    
    public String getVendorAdvisory() { return vendorAdvisory; }
    public void setVendorAdvisory(String vendorAdvisory) { this.vendorAdvisory = vendorAdvisory; }
    
    public String getPatchAvailable() { return patchAvailable; }
    public void setPatchAvailable(String patchAvailable) { this.patchAvailable = patchAvailable; }
    
    public String getDodoSecRiskScore() { return dodoSecRiskScore; }
    public void setDodoSecRiskScore(String dodoSecRiskScore) { this.dodoSecRiskScore = dodoSecRiskScore; }
    
    public LocalDateTime getLastVerified() { return lastVerified; }
    public void setLastVerified(LocalDateTime lastVerified) { this.lastVerified = lastVerified; }
    
    public String getDetectionMethod() { return detectionMethod; }
    public void setDetectionMethod(String detectionMethod) { this.detectionMethod = detectionMethod; }
    
    public Set<String> getAffectedVersionRanges() { return affectedVersionRanges; }
    public void setAffectedVersionRanges(Set<String> affectedVersionRanges) { this.affectedVersionRanges = affectedVersionRanges; }
    
    public String getAffectedComponent() { return affectedComponent; }
    public void setAffectedComponent(String affectedComponent) { this.affectedComponent = affectedComponent; }
    
    public LocalDateTime getDiscoveredDate() { return discoveredDate; }
    public void setDiscoveredDate(LocalDateTime discoveredDate) { this.discoveredDate = discoveredDate; }
    
    public String getReferenceUrl() { return referenceUrl; }
    public void setReferenceUrl(String referenceUrl) { this.referenceUrl = referenceUrl; }
    
    // Utility methods
    @com.fasterxml.jackson.annotation.JsonIgnore
    public boolean isCritical() {
        return "CRITICAL".equalsIgnoreCase(severity) || 
               (cvssV3Score != null && cvssV3Score >= 9.0) ||
               (cvssV2Score != null && cvssV2Score >= 9.0);
    }
    
    @com.fasterxml.jackson.annotation.JsonIgnore
    public boolean isHigh() {
        return "HIGH".equalsIgnoreCase(severity) || 
               (cvssV3Score != null && cvssV3Score >= 7.0 && cvssV3Score < 9.0) ||
               (cvssV2Score != null && cvssV2Score >= 7.0 && cvssV2Score < 9.0);
    }
    
    @com.fasterxml.jackson.annotation.JsonIgnore
    public boolean isMedium() {
        return "MEDIUM".equalsIgnoreCase(severity) || 
               (cvssV3Score != null && cvssV3Score >= 4.0 && cvssV3Score < 7.0) ||
               (cvssV2Score != null && cvssV2Score >= 4.0 && cvssV2Score < 7.0);
    }
    
    @com.fasterxml.jackson.annotation.JsonIgnore
    public boolean isLow() {
        return "LOW".equalsIgnoreCase(severity) || 
               (cvssV3Score != null && cvssV3Score > 0.0 && cvssV3Score < 4.0) ||
               (cvssV2Score != null && cvssV2Score > 0.0 && cvssV2Score < 4.0);
    }
    
    @com.fasterxml.jackson.annotation.JsonIgnore
    public Double getHighestCvssScore() {
        if (cvssV3Score != null && cvssV2Score != null) {
            return Math.max(cvssV3Score, cvssV2Score);
        }
        return cvssV3Score != null ? cvssV3Score : cvssV2Score;
    }
    
    @com.fasterxml.jackson.annotation.JsonIgnore
    public String getSeverityLevel() {
        if (isCritical()) return "CRITICAL";
        if (isHigh()) return "HIGH";
        if (isMedium()) return "MEDIUM";
        if (isLow()) return "LOW";
        return "UNKNOWN";
    }
    
    @com.fasterxml.jackson.annotation.JsonIgnore
    public boolean isRecentlyPublished(int days) {
        if (publishedDate == null) return false;
        return publishedDate.isAfter(LocalDateTime.now().minusDays(days));
    }
    
    @com.fasterxml.jackson.annotation.JsonIgnore
    public boolean hasRecentUpdate(int days) {
        if (modifiedDate == null) return false;
        return modifiedDate.isAfter(LocalDateTime.now().minusDays(days));
    }
    
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Vulnerability)) return false;
        Vulnerability that = (Vulnerability) o;
        return Objects.equals(id, that.id) && Objects.equals(cveId, that.cveId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(id, cveId);
    }
    
    @Override
    public String toString() {
        return "Vulnerability{" +
                "id='" + id + '\'' +
                ", cveId='" + cveId + '\'' +
                ", severity='" + severity + '\'' +
                ", cvssV3Score=" + cvssV3Score +
                ", source='" + source + '\'' +
                '}';
    }
}